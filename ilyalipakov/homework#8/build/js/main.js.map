{"version":3,"sources":["index.js"],"names":["commonPassword","successFields","form","document","querySelector","btn","inputName","inputEmail","inputPassword","inputCheckPassword","successField","errorsFields","name","email","password","check_password","addEventListener","e","preventDefault","_this$elements","this","elements","value","toggleField","shackerButton","users","JSON","parse","localStorage","getItem","key","push","setItem","stringify","showSuccessRegistration","clearField","currentTarget","match","checkUser","elem","clazz1","clazz2","classList","add","remove","previousElementSibling","concat","clazz","setTimeout","user","pattern","RegExp","i","length","test"],"mappings":"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","file":"main.js","sourcesContent":["\"use strict\";\n\nvar commonPassword = '';\nvar successFields = [];\nvar form = document.querySelector('.form');\nvar btn = document.querySelector('.form__submit');\nvar inputName = document.querySelector('.form__name');\nvar inputEmail = document.querySelector('.form__email');\nvar inputPassword = document.querySelector('.form__password');\nvar inputCheckPassword = document.querySelector('.form__checkpassword');\nvar successField = document.querySelector('.success_registration');\nvar errorsFields = {\n  name: false,\n  email: false,\n  password: false,\n  check_password: false\n}; // Events\n\nform.addEventListener('submit', function (e) {\n  e.preventDefault();\n  var _this$elements = this.elements,\n      name = _this$elements.name,\n      email = _this$elements.email,\n      password = _this$elements.password,\n      check_password = _this$elements.check_password;\n\n  if (!errorsFields.name || name.value === '') {\n    toggleField(name, 'fail', 'success');\n    shackerButton(inputName);\n  }\n\n  if (!errorsFields.email || email.value === '') {\n    toggleField(email, 'fail', 'success');\n    shackerButton(inputEmail);\n  }\n\n  if (!errorsFields.password || password.value === '') {\n    toggleField(password, 'fail', 'success');\n    shackerButton(inputPassword);\n  }\n\n  if (!errorsFields.check_password || check_password.value === '') {\n    toggleField(check_password, 'fail', 'success');\n    shackerButton(inputCheckPassword);\n  }\n\n  if (!errorsFields.name || !errorsFields.email || !errorsFields.password || !errorsFields.check_password) {\n    return;\n  }\n\n  var users = JSON.parse(localStorage.getItem('users')) || [];\n  users.push({\n    name: name.value,\n    email: email.value,\n    password: password.value\n  });\n  localStorage.setItem('users', JSON.stringify(users));\n  showSuccessRegistration();\n  clearField(inputName, 'success');\n  clearField(inputEmail, 'success');\n  clearField(inputPassword, 'success');\n  clearField(inputCheckPassword, 'success');\n  inputName.value = '';\n  inputEmail.value = '';\n  inputPassword.value = '';\n  inputCheckPassword.value = '';\n\n  for (var key in errorsFields) {\n    errorsFields[key] = false;\n  }\n});\ninputName.addEventListener('input', function (e) {\n  var value = e.currentTarget.value;\n  var pattern = /^[а-яЁё\\w]{5,10}$/i;\n\n  if (!value) {\n    clearField(this, 'fail');\n    clearField(this, 'success');\n    return;\n  }\n\n  if (value.match(pattern) && !checkUser(value)) {\n    toggleField(this, 'success', 'fail');\n    errorsFields.name = true;\n  } else {\n    toggleField(this, 'fail', 'success');\n    errorsFields.name = false;\n  }\n});\ninputEmail.addEventListener('input', function (e) {\n  var value = e.currentTarget.value;\n  var pattern = /^[-\\w.]+@([A-z0-9][-A-z0-9]+\\.)+[A-z]{2,4}$/;\n\n  if (!value) {\n    clearField(this, 'fail');\n    clearField(this, 'success');\n    return;\n  }\n\n  if (value.match(pattern)) {\n    toggleField(this, 'success', 'fail');\n    errorsFields.email = true;\n  } else {\n    toggleField(this, 'fail', 'success');\n    errorsFields.email = false;\n  }\n});\ninputPassword.addEventListener('input', function (e) {\n  var value = e.currentTarget.value;\n  var pattern = /^(?=.*[A-Z])(?=.*\\d)(?!.*\\s)[\\w!@#$%^&]{10,}$/;\n\n  if (!value) {\n    clearField(this, 'fail');\n    clearField(this, 'success');\n    return;\n  }\n\n  if (value.match(pattern)) {\n    toggleField(this, 'success', 'fail');\n    commonPassword = value;\n    errorsFields.password = true;\n  } else {\n    toggleField(this, 'fail', 'success');\n    errorsFields.password = false;\n  }\n});\ninputCheckPassword.addEventListener('input', function (e) {\n  var value = e.currentTarget.value;\n\n  if (!value) {\n    clearField(this, 'fail');\n    clearField(this, 'success');\n    return;\n  }\n\n  if (value === commonPassword) {\n    toggleField(this, 'success', 'fail');\n    errorsFields.check_password = true;\n  } else {\n    toggleField(this, 'fail', 'success');\n    errorsFields.check_password = false;\n  }\n}); // Methods\n\nvar toggleField = function toggleField(elem, clazz1, clazz2) {\n  elem.classList.add(clazz1);\n  elem.classList.remove(clazz2);\n  elem.previousElementSibling.classList.add(\"form__icon_\".concat(clazz1));\n  elem.previousElementSibling.classList.remove(\"form__icon_\".concat(clazz2));\n};\n\nvar clearField = function clearField(elem, clazz) {\n  elem.classList.remove(clazz);\n  elem.previousElementSibling.classList.remove(\"form__icon_\".concat(clazz));\n};\n\nvar shackerButton = function shackerButton(elem) {\n  elem.classList.add('shake');\n  setTimeout(function () {\n    elem.classList.remove('shake');\n  }, 1000);\n};\n\nvar showSuccessRegistration = function showSuccessRegistration() {\n  successField.classList.add('show');\n  setTimeout(function () {\n    successField.classList.remove('show');\n  }, 2000);\n};\n\nvar checkUser = function checkUser(user) {\n  var users = JSON.parse(localStorage.getItem('users')) || [];\n  var pattern = new RegExp(\"^\".concat(user));\n\n  for (var i = 0; i < users.length; i++) {\n    if (pattern.test(users[i].name)) {\n      return true;\n    }\n  }\n\n  return false;\n};"]}